name: Test and Check

on:
  push:
    branches: [ main ]
  pull_request:
  merge_group:
    branches:
      - main
  workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build no-std
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: stable
          args: --no-default-features

      - name: Build stm32
        working-directory: statime-stm32
        run: cargo build
    
      # Build std is handled by test job

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Run tests
        run: cargo llvm-cov --all-features --lcov --output-path lcov.info
        env:
          RUST_BACKTRACE: 1

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: false

  check:
    name: Check style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          toolchain: stable
          args: --all --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          toolchain: stable
          args: --workspace --all-features -- -D warnings

      - name: Run clippy (fuzzers)
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505
        with:
          command: clippy
          args: --manifest-path ./fuzz/Cargo.toml --all-targets -- -D warnings

  fuzz:
    name: Smoke-test fuzzing targets
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install stable toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af
        with:
          toolchain: nightly
          override: true
          default: true
      - name: Install cargo fuzz
        uses: taiki-e/install-action@70233fe3d27d863712ee34eede2087e36bde6b5e
        with:
          tool: cargo-fuzz
      - name: Smoke-test fuzz targets
        run: |
          cargo fuzz build
          for target in $(cargo fuzz list) ; do
            cargo fuzz run $target -- -max_total_time=10
          done
